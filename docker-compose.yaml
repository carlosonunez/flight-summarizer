volumes:
  gomod: {}
  gocache: {}
  outdir: {}
  tzdb-vol: {}
services:
  build:
    image: golang:${GOLANG_VERSION}-alpine
    volumes:
      - gomod:/go/pkg/mod
      - gocache:/root/.cache/go-build
      - outdir:/out
      - $PWD:/usr/local/go/src/project
    working_dir: /usr/local/go/src/project
    entrypoint: [ "go" ]
    environment:
      - CGO_ENABLED=0
      - GOOS=${GOOS:-linux}
      - GOARCH=${GOARCH:-arm64}
      - PROJECT_NAME
    command:
      - build
      - -o 
      - /out
      - ./...
  test:
    image: golang:${GOLANG_VERSION}-alpine
    volumes:
      - gomod:/go/pkg/mod
      - gocache:/root/.cache/go-build
      - $PWD:/usr/local/go/src/project
    working_dir: /usr/local/go/src/project
    entrypoint: [ "go" ]
    environment:
      - TEST_EXCLUDE
      - TEST_FILTER
      - CGO_ENABLED=0
      - GOOS=${GOOS:-linux}
      - GOARCH=${GOARCH:-arm64}
    command:
      - test
      - -failfast
      - ./...
      - -skip
      - ${TEST_EXCLUDE:-E2E}
      - -run
      - ${TEST_FILTER:-.*}
  e2e:
    depends_on:
      _retrieve_timezones:
        condition: service_completed_successfully
    image: golang:${GOLANG_VERSION}-alpine
    volumes:
      - gomod:/go/pkg/mod
      - gocache:/root/.cache/go-build
      - tzdb-vol:/data
      - $PWD:/usr/local/go/src/project
    working_dir: /usr/local/go/src/project
    entrypoint: [ "go" ]
    environment:
      - TEST_EXCLUDE
      - TEST_FILTER
      - CGO_ENABLED=0
      - GOOS=${GOOS:-linux}
      - GOARCH=${GOARCH:-arm64}
    command:
      - test
      - -failfast
      - ./...
      - -run
      - E2E
  run:
    image: golang:${GOLANG_VERSION}-alpine
    volumes:
      - gomod:/go/pkg/mod
      - gocache:/root/.cache/go-build
      - outdir:/out
      - $PWD:/usr/local/go/src/project
    working_dir: /usr/local/go/src/project
    entrypoint: [ "go" ]
    environment:
      - TEST_FILTER
      - TEST_EXCLUDE
      - CGO_ENABLED=0
      - GOOS=${GOOS:-linux}
      - GOARCH=${GOARCH:-arm64}
    command:
      - test
      - -failfast
      - ./...
      - -skip
      - '!E2E$'
  _retrieve_timezones:
    image: curlimages/curl:8.11.1
    entrypoint: sh
    user: root
    environment:
      - REFRESH_TZ
    volumes:
      - tzdb-vol:/out
    command:
      - -c
      - |
        { test -z "$REFRESH_TZ" && test -f /out/timezonedb.csv; } && exit 0
        cd /tmp
        curl -o tzdb.csv.zip https://timezonedb.com/files/TimeZoneDB.csv.zip &&
        unzip tzdb.csv.zip &&
        echo 'id,zone_name,country_code,abbreviation,time_start,gmt_offset,dst' > /out/timezonedb.csv; \
        {
          cat -b time_zone.csv |
            tr '\t' ',' |
            sed -E 's/^[ \t]+//';
        } | sort -r > /out/timezonedb.csv

